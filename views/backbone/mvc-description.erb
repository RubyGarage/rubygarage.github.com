<section id="mvc-description" class="slide">
  <h2>How does Backbone relate to «traditional» MVC?</h2>
  

  <ul class=centred>
    <li>
      <strong>Backbone.Model</strong> - Like a Rails model minus the class methods. Wraps a row of data in business logic.
    </li>
    <li>
      <strong>Backbone.Collection</strong> - A group of models on the client-side, with sorting/filtering/aggregation logic.
    </li>
    <li>
      <strong>Backbone.Router</strong> - Rails "routes.rb" + Rails controller actions. Maps URLs to functions.
    </li>
    <li>
      <strong>Backbone.View</strong> - A logical, re-usable piece of UI. Often, but not always, associated with a model
    </li>
    <li>
      <strong>Client-side Tamplates</strong> - Rails ".html.erb" views, rendering a chuck of HTML.
    </li>
  </ul>  
</section>